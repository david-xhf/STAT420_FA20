sd(beta_hat_0)
faithful_model = lm(eruptions ~ waiting, data = faithful)
summary(faithful_model)
summary(faithful_model)$coefficients[2,3:4]
confint(faithful_model, "waiting", level = 0.99)
confint(faithful_model, "(Intercept)", level = 0.90)
wait_times = data.frame(waiting = c(75, 80))
predict(faithful_model, wait_times, interval = c("confidence"), level = 0.95)
mean(faithful$waiting)
wait_times = data.frame(waiting = c(75, 100))
predict(faithful_model, wait_times, interval = c("prediction"), level = 0.95)
waiting_grid = seq(min(faithful$waiting), max(faithful$waiting), by = 0.01)
duration_confint_band = predict(faithful_model, newdata = data.frame(waiting = waiting_grid), interval = "confidence", level = 0.95)
duration_pred_band = predict(faithful_model, newdata = data.frame(waiting = waiting_grid), interval = "prediction", level = 0.95)
plot(eruptions ~ waiting, data = faithful,
xlab = "Waiting Time in minutes",
ylab = "Eruption Length in minutes",
main = "Eruption Length vs Waiting Time",
pch  = 20,
cex  = 1,
col  = "darkorange")
abline(faithful_model, lwd = 3, col = "blue")
lines(waiting_grid, duration_confint_band[,2], col = "yellow", lwd = 3)
lines(waiting_grid, duration_confint_band[,3], col = "yellow", lwd = 3)
lines(waiting_grid, duration_pred_band[,2], col = "green", lwd = 3)
lines(waiting_grid, duration_pred_band[,3], col = "green", lwd = 3)
library(faraway)
cholesterol_model = lm(chol ~ weight, data = diabetes)
summary(cholesterol_model)
summary(cholesterol_model)$fstatistic
summary(cholesterol_model)$coefficients
knitr::kable(anova(cholesterol_model))
hdl_model = lm(hdl ~ weight, data = diabetes)
summary(hdl_model)
summary(hdl_model)$fstatistic
summary(hdl_model)$coefficients
knitr::kable(anova(hdl_model))
goalies = read.csv("goalies.csv")
goalies_model = lm(W ~ MIN, data = goalies)
summary(goalies_model)
beta_1_hat  = summary(goalies_model)$coef[2,1]
beta_1_hat
se   = summary(goalies_model)$coef[2,2]
se
n    = length(fitted(goalies_model))
n
t    = (beta_1_hat - 0.008) / se
t
p    = pt(t, df = n - 2)
p
uin = 677094009
set.seed(uin)
n = 50
x = seq(0, 20, length = n)
beta_hat_0 = rep(0, 1500)
beta_hat_1 = rep(0, 1500)
for (i in 1:1500) {
y = 4 + 0.5 * x + rnorm(n, mean = 0, sd = 5)
beta_hat_0[i] = coef(lm(y ~ x))[1]
beta_hat_1[i] = coef(lm(y ~ x))[2]
}
Sxx = sum((x - mean(x)) ^ 2)
sqrt(25 / Sxx)
mean(beta_hat_1)
sd(beta_hat_1)
sqrt(25 * ( 1 / n + mean(x) ^ 2 / Sxx))
mean(beta_hat_0)
sd(beta_hat_0)
hist(beta_hat_1,
xlab = expression(hat(beta)[1]),
breaks = 30,
prob = TRUE)
curve(dnorm(x, mean = 0.5, sd = 0.120049), add = TRUE, lwd = 3)
hist(beta_hat_0,
xlab = expression(hat(beta)[0]),
breaks = 30,
prob = TRUE)
curve(dnorm(x, mean = 4, sd = 1.393261), add = TRUE, lwd = 3)
uin = 677094009
set.seed(uin)
n = 20
x = seq(-5, 5, length = n)
Sxx = sum((x - mean(x)) ^ 2)
beta_hat_0 = rep(0, 2000)
se         = rep(0, 2000)
for (i in 1:2000) {
y = 1 + 3 * x + rnorm(n, 0, sqrt(16))
beta_hat_0[i] = coef(lm(y ~ x))[1]
se[i] = summary((lm(y ~ x)))$sigma
}
crit_90 = qt(0.950, df = n - 2)
lower_90 = beta_hat_0 - crit_90 * se * sqrt(1 / n + mean(x) ^ 2 / Sxx)
upper_90 = beta_hat_0 + crit_90 * se * sqrt(1 / n + mean(x) ^ 2 / Sxx)
mean(lower_90 < 1 & 1 < upper_90)
1 - mean(lower_90 < 0 & 0 < upper_90)
crit_99 = qt(0.995, df = n - 2)
lower_99 = beta_hat_0 - crit_99 * se * sqrt(1 / n + mean(x) ^ 2 / Sxx)
upper_99 = beta_hat_0 + crit_99 * se * sqrt(1 / n + mean(x) ^ 2 / Sxx)
mean(lower_99 < 1 & 1 < upper_99)
1 - mean(lower_99 < 0 & 0 < upper_99)
sd_beta_hat_0 = sqrt(25 * ( 1 / n + mean(x) ^ 2 / Sxx))
sd_beta_hat_0
sd_beta_hat_0 = sqrt(25 * ( 1 / n + mean(x) ^ 2 / Sxx))
sd_beta_hat_0
uin = 677094009
set.seed(uin)
n = 50
x = seq(0, 20, length = n)
beta_hat_0 = rep(0, 1500)
beta_hat_1 = rep(0, 1500)
for (i in 1:1500) {
y = 4 + 0.5 * x + rnorm(n, mean = 0, sd = 5)
beta_hat_0[i] = coef(lm(y ~ x))[1]
beta_hat_1[i] = coef(lm(y ~ x))[2]
}
Sxx = sum((x - mean(x)) ^ 2)
sqrt(25 / Sxx)
mean(beta_hat_1)
sd(beta_hat_1)
uin = 677094009
set.seed(uin)
n = 50
x = seq(0, 20, length = n)
beta_hat_0 = rep(0, 1500)
beta_hat_1 = rep(0, 1500)
for (i in 1:1500) {
y = 4 + 0.5 * x + rnorm(n, mean = 0, sd = 5)
beta_hat_0[i] = coef(lm(y ~ x))[1]
beta_hat_1[i] = coef(lm(y ~ x))[2]
}
Sxx = sum((x - mean(x)) ^ 2)
sqrt(25 / Sxx)
mean(beta_hat_1)
sd(beta_hat_1)
sd_beta_hat_0 = sqrt(25 * ( 1 / n + mean(x) ^ 2 / Sxx))
sd_beta_hat_0
mean(beta_hat_0)
sd(beta_hat_0)
hist(beta_hat_1,
xlab = expression(hat(beta)[1]),
breaks = 30,
prob = TRUE)
curve(dnorm(x, mean = 0.5, sd = 0.120049), add = TRUE, lwd = 3)
hist(beta_hat_0,
xlab = expression(hat(beta)[0]),
breaks = 30,
prob = TRUE)
curve(dnorm(x, mean = 4, sd = sd_beta_hat_0), add = TRUE, lwd = 3)
