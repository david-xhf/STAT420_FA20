wisc_all = glm(class ~ ., data = wisc_train, family = binomial)
wisc_full = glm(class ~ . ^ 2, data = wisc_train, family = binomial, maxit = 50)
wisc_select = step(wisc_full, trace = 0)
library(boot)
set.seed(20000623)
cv.glm(wisc_train, wisc_small, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_all, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_select, K = 5)$delta[1]
pred = ifelse(predict(wisc_add_sm, wisc_test, type = "response") > 0.5, "M", "B")
library(boot)
set.seed(20000623)
cv.glm(wisc_train, wisc_small, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_all, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_select, K = 5)$delta[1]
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > 0.5, "M", "B")
mean(pred != wisc_test$class)
library(boot)
set.seed(1)
cv.glm(wisc_train, wisc_small, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_all, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_train, wisc_select, K = 5)$delta[1]
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > 0.5, "M", "B")
mean(pred != wisc_test$class)
library(boot)
set.seed(623)
cv.glm(wisc_train, wisc_small, K = 5)$delta[1]
set.seed(623)
cv.glm(wisc_train, wisc_all, K = 5)$delta[1]
set.seed(623)
cv.glm(wisc_train, wisc_select, K = 5)$delta[1]
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > 0.5, "M", "B")
mean(pred != wisc_test$class)
library(boot)
set.seed(623)
cv.glm(wisc_train, wisc_small, K = 5)$delta[1]
set.seed(623)
cv.glm(wisc_train, wisc_all, K = 5)$delta[1]
set.seed(623)
cv.glm(wisc_train, wisc_select, K = 5)$delta[1]
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > 0.5, "M", "B")
mean(pred != wisc_test$class)
cutoffs = seq(0.01, 0.99, by = 0.01)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_add_sm, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
legend("bottom", c("Sensitivity", "Specificity"),
lty = c(1, 2),
lwd = 2,
col = c("dodgerblue", "darkorange"))
grid(nx = 20, ny = 20)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
legend("bottom", c("Sensitivity", "Specificity"),
lty = c(1, 2),
lwd = 2,
col = c("dodgerblue", "darkorange"))
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
lines(0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
ablines(0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(x=0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 6.6)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 6.6, lty = 2)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
axis(1, seq(0, 1, 0.1))
# lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 6.6, lty = 2)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 6.6, lty = 2)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 5, lty = 2)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 5, lty = 2)
birthday = 20000623
set.seed(birthday)
library(broom)
sim_anova = function(n_a = 1, n_b = 2, mu_a = 0, mu_b = 2, sigma = 1){
sim_data = data.frame(
response = c(rnorm(n = n_a, mean = mu_a, sd = sigma),
rnorm(n = n_b, mean = mu_b, sd = sigma)),
group = c(rep("A", times = n_a), rep("B", times = n_b))
)
aov_result = lm(response ~ group, data = sim_data)
p_value = glance(aov_result)$p.value
}
means = rep(0, 9)
for (i in 1:9){
j = 10 - i;
p_vals = replicate(n = 800, sim_anova(n_a = i, n_b = 10 - i))
means[i]=mean(p_vals < 0.05)
}
plot(1:9, means,
main="Power vs Balance",
xlab = "Size",
ylab = "Power",
xaxt = "n")
axis(1, 1:9)
lines(1:9, means, lwd = 3)
birthday = 20000623
set.seed(birthday)
library(broom)
sim_anova = function(n_a = 1, n_b = 2, mu_a = 0, mu_b = 2, sigma = 1){
sim_data = data.frame(
response = c(rnorm(n = n_a, mean = mu_a, sd = sigma),
rnorm(n = n_b, mean = mu_b, sd = sigma)),
group = c(rep("A", times = n_a), rep("B", times = n_b))
)
aov_result = lm(response ~ group, data = sim_data)
p_value = glance(aov_result)$p.value
}
means = rep(0, 9)
for (i in 1:9){
j = 10 - i;
p_vals = replicate(n = 800, sim_anova(n_a = i, n_b = 10 - i))
means[i]=mean(p_vals < 0.05)
}
plot(1:9, means,
main="Power vs Balance",
xlab = "Size",
ylab = "Power",
xaxt = "n")
axis(1, 1:9)
lines(1:9, means, lwd = 3)
abline(v = 5)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 6)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
lwd = 3,
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_add_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,type = "l", lwd = 2,
xlab = "Cutoffs", ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results", col = "dodgerblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,type = "l", lwd = 2,
xlab = "Cutoffs", ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results", col = "dodgerblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.8)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,type = "l", lwd = 2,
xlab = "Cutoffs", ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results", col = "dodgerblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.82)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,type = "l", lwd = 2,
xlab = "Cutoffs", ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results", col = "dodgerblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.81)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results",
lwd = 3,
col = "darkblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs, type = "l",
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
main = "Cutoffs vs Results",
lwd = 2,
col = "darkblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.81)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_small, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs,
type = "l",
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
lwd = 3,
col = "darkblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 4)
abline(v = 0.66)
n = length(cutoffs)
sens = rep(0, n)
spec = rep(0, n)
for (i in 1:n){
pred = ifelse(predict(wisc_all, wisc_test, type = "response") > cutoffs[i], "M", "B")
conf_mat = make_conf_mat(predicted = pred, actual = wisc_test$class)
sens[i] = get_sens(conf_mat)
spec[i] = get_spec(conf_mat)
}
plot(sens ~ cutoffs, type = "l",
xlab = "Cutoffs",
ylab = "Sensitivity & Specificity",
lwd = 2,
col = "darkblue")
lines(cutoffs, spec, col="darkorange", lty = 2, lwd = 3)
abline(v = 0.81)
