epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
class(epa$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
class(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
class(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
View(epa2015)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
as.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
level(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
levels(epa2015$type)
epa2015 = read.csv("epa2015.csv")
str(epa2015)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
levels(epa2015$type)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
levels(epa2015$type)
is.factor(epa2015$type)
epa2015$type = as.factor(epa2015$type)
is.factor(epa2015$type)
levels(epa2015$type)
plot(CO2 ~ horse, data = epa2015, col = type)
co2_slr = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(co2_slr, lwd = 3, col = "blue")
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 2, col = "blue")
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3)
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "darkblue")
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
slr_coef = summary(slr_model)$coef[,1]
int_both    = slr_coef[1]
int_car     = slr_coef[1]
int_truck   = slr_coef[1]
slope_both  = slr_coef[2]
slope_car   = slr_coef[2]
slope_truck = slr_coef[2]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
coef(slr_model)["horse"]
slr_coef = summary(slr_model)$coef[,1]
int_both    = slr_coef[1]
int_car     = slr_coef[1]
int_truck   = slr_coef[1]
slope_both  = slr_coef[2]
slope_car   = slr_coef[2]
slope_truck = slr_coef[2]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
coef(slr_model)["horse"]
summary(co2_slr)$coef[,1]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
coef(slr_model)["horse"]
summary(co2_slr)$coef[2,1]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
summary(co2_slr)$coef[2,1]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
coef(slr_model)["horse"]
summary(slr_model)$coef[2,1]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
summary(slr_model)$coef[2,1]
slr_model = lm(CO2 ~ horse, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
abline(slr_model, lwd = 3, col = "blue")
summary(slr_model)$coef[2,1]
subaru = data.frame(horse = 148, type = "Both")
predict(slr_model, subaru, interval = "prediction", level = 0.95)
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
add_coef = summary(co2_add)$coef[,1]
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
add_coef = summary(additive_model)$coef[,1]
int_both = add_coef[1]
int_car = add_coef[1] + add_coef[3]
int_truck = add_coef[1] + add_coef[4]
slope_both = add_coef[2]
slope_car = add_coef[2]
slope_truck = add_coef[2]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
add_coef = summary(additive_model)$coef[,1]
int_both = add_coef[1]
int_car = add_coef[1] + add_coef[3]
int_truck = add_coef[1] + add_coef[4]
slope_both = add_coef[2]
slope_car = add_coef[2]
slope_truck = add_coef[2]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
(add_coef = summary(additive_model)$coef[,1])
int_both = add_coef[1]
int_car = add_coef[1] + add_coef[3]
int_truck = add_coef[1] + add_coef[4]
slope_both = add_coef[2]
slope_car = add_coef[2]
slope_truck = add_coef[2]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(additive_model)[1]
int_car = coef(additive_model)[1] + coef(additive_model)[3]
int_truck = coef(additive_model)[1] + coef(additive_model)[4]
slope = coef(additive_model)[2]
abline(int_both, slope, lwd = 3, col = "black")
abline(int_car, slope, lwd = 3, col = "red")
abline(int_truck, slope, lwd = 3, col = "green")
additive_model = lm(CO2 ~ horse + type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(additive_model)[1]
int_car = coef(additive_model)[1] + coef(additive_model)[3]
int_truck = coef(additive_model)[1] + coef(additive_model)[4]
slope = coef(additive_model)[2]
abline(int_both, slope, lwd = 3, col = "black")
abline(int_car, slope, lwd = 3, col = "red")
abline(int_truck, slope, lwd = 3, col = "green")
predict(additive_model, subaru, interval = "prediction", level = 0.95)
summary(additive_model)$coef[2,1]
predict(additive_model, subaru, interval = "prediction", level = 0.95)
predict(additive_model, subaru, interval = "prediction", level = 0.95)
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
summary(interaction_model)$coef[2,1]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
summary(interaction_model)
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
summary(interaction_model)$coef["horse:typeTruck"]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse:typeTruck"]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"][1]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"][2,]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"][1,]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"]
interaction_model = lm(CO2 ~ horse * type, data = epa2015)
plot(CO2 ~ horse, data = epa2015, col = type)
int_both = coef(interaction_model)[1]
int_car = coef(interaction_model)[1] + coef(interaction_model)[3]
int_truck = coef(interaction_model)[1] + coef(interaction_model)[4]
slope_both = coef(interaction_model)[2]
slope_car = coef(interaction_model)[2] + coef(interaction_model)[5]
slope_truck = coef(interaction_model)[2] + coef(interaction_model)[6]
abline(int_both, slope_both, lwd = 3, col = "black")
abline(int_car, slope_car, lwd = 3, col = "red")
abline(int_truck, slope_truck, lwd = 3, col = "green")
coef(interaction_model)["horse"] + coef(interaction_model)["horse:typeTruck"]
predict(interaction_model, subaru, interval="prediction")
anova(slr_model, additive_model)
anova(additive_model, interaction_model)
hospital = read.csv("hospital.csv")
str(hospital)
is.factor(hospital$Care)
is.factor(hospital$Race)
levels(hospital$Care)
levels(hospital$Race)
hospital = read.csv("hospital.csv")
str(hospital)
is.factor(hospital$Care)
hospital$Care = as.factor(hospital$Care)
is.factor(hospital$Care)
levels(hospital$Care)
hospital = read.csv("hospital.csv")
str(hospital)
is.factor(hospital$Care)
hospital$Care = as.factor(hospital$Care)
is.factor(hospital$Care)
levels(hospital$Care)
is.factor(hospital$Race)
hospital$Race = as.factor(hospital$Race)
is.factor(hospital$Race)
levels(hospital$Race)
additive_model = lm(Days ~ Charges + Pressure + Care + Race, data = hospital)
coef(additive_model)
complex_model = lm(Days ~ (Charges + Pressure) * Care + Race, data = hospital)
anova(hosp_add, hosp_add_care_int)
complex_model = lm(Days ~ (Charges + Pressure) * Care + Race, data = hospital)
anova(additive_model, complex_model)
complex_model = lm(Days ~ Charges * Care + Pressure * Care + Race, data = hospital)
anova(additive_model, complex_model)
complex_model_d = lm(Days ~ (Charges + Pressure) * Care + (Charges + Pressure) * Race, data = hospital)
anova(complex_model, complex_model_d)
complex_model_d = lm(Days ~ (Charges + Pressure) * Care + (Charges + Pressure) * Race, data = hospital)
anova(additive_model, complex_model_d)
coef(complex_model_d)["Pressure"] + coef(complex_model_d)["Pressure:Racewhite"]
coef(complex_model_d)["Pressure"] + coef(complex_model_d)["Pressure:Racewhite"]
four_predictors = lm(Days ~ Charges * Pressure * Care * Race, data = hospital)
anova(complex_model_d, four_predictors)
fish = read.csv("fish.csv")
fish_int = lm(Weight~Length1*HeightPct*WidthPct,data=fish)
coef(fish_int)
fish = read.csv("fish.csv")
fish_model = lm(Weight ~ Length1 * HeightPct * WidthPct, data = fish)
coef(fish_model)
anova(fish_smaller, fish_model)
fish_smaller = lm(Weight ~ Length1 + HeightPct * WidthPct, data = fish)
anova(fish_smaller, fish_model)
coef(fish_model)["Length1"] + coef(fish_model)["Length1:HeightPct"]*20 + coef(fish_model)["Length1:WidthPct"]*10 + coef(fish_model)["Length1:HeightPct:WidthPct"]*20*10
coef(fish_model)["Length1"] + coef(fish_model)["Length1:HeightPct"] * 20 + coef(fish_model)["Length1:WidthPct"] * 10 + coef(fish_model)["Length1:HeightPct:WidthPct"] * 20 * 10
coef(fish_smaller)["Length1"]
n = 16
ex4 = data.frame(
groups = c(rep("A", n / 2), rep("B", n / 2)),
values = rep(0, n))
str(ex4)
set.seed(677094009)
for(i in 1:num_sims) {
ex4$values = rnorm(n, mean = 10, sd = 3)
lm_t[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 3]
lm_p[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 4]
tt_t[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$stat
tt_p[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$p.val
}
n = 16
ex4 = data.frame(
groups = c(rep("A", n / 2), rep("B", n / 2)),
values = rep(0, n))
str(ex4)
ex4$values = rnorm(n, mean = 10, sd = 3) # simualte data
summary(lm(values ~ groups, data = ex4))
t.test(values ~ groups, data = ex4, var.equal = TRUE)
num_sims = 100
lm_t = rep(0, num_sims)
lm_p = rep(0, num_sims)
tt_t = rep(0, num_sims)
tt_p = rep(0, num_sims)
set.seed(677094009)
for(i in 1:num_sims) {
ex4$values = rnorm(n, mean = 10, sd = 3)
lm_t[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 3]
lm_p[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 4]
tt_t[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$stat
tt_p[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$p.val
}
set.seed(677094009)
for(i in 1:num_sims) {
ex4$values = rnorm(n, mean = 10, sd = 3)
lm_t[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 3]
lm_p[i] = summary(lm(values ~ groups, data = ex4))$coef[2, 4]
tt_t[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$stat
tt_p[i] = t.test(values ~ groups, data = ex4, var.equal = TRUE)$p.val
}
mean(lm_t == tt_t)
all.equal(lm_t, -tt_t)
all.equal(lm_p, tt_p)
mean(lm_p == tt_p)
all.equal(abs(tt_t),abs(lm_t))
all.equal(lm_t, -tt_t)
